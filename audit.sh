#!/bin/bash

set -e

BINARY="./target/release/inspector_image"
IMAGE="../resources/image.jpeg"

echo "=== üöÄ Audit automatique du projet Inspector-Image ==="

echo ""
echo "1Ô∏è‚É£ V√©rification du contenu du d√©p√¥t..."
if [ -f "README.md" ]; then
    echo "‚úÖ README.md pr√©sent"
else
    echo "‚ùå README.md manquant"
fi

if [ -d "src" ]; then
    echo "‚úÖ Code source pr√©sent"
else
    echo "‚ùå Dossier src/ manquant"
fi

echo ""
echo "2Ô∏è‚É£ Compilation du projet..."
cargo build --release
if [ -f "$BINARY" ]; then
    echo "‚úÖ Binaire compil√© : $BINARY"
else
    echo "‚ùå Erreur : binaire non g√©n√©r√©"
    exit 1
fi

echo ""
echo "3Ô∏è‚É£ Test commande -map"
$BINARY map "$IMAGE" > map_output.txt
cat map_output.txt
if grep -q "32" map_output.txt && grep -q "34" map_output.txt; then
    echo "‚úÖ Coordonn√©es GPS d√©tect√©es (32, 34)"
else
    echo "‚ö†Ô∏è V√©rifiez que les coordonn√©es correspondent bien (attendu : 32 / 34)"
fi

echo ""
echo "4Ô∏è‚É£ Test commande -steg"
$BINARY steg "$IMAGE" > steg_output.txt
head -n 5 steg_output.txt
if grep -q "-----BEGIN PGP PUBLIC KEY BLOCK-----" steg_output.txt && grep -q "-----END PGP PUBLIC KEY BLOCK-----" steg_output.txt; then
    echo "‚úÖ Cl√© PGP d√©tect√©e"
else
    echo "‚ùå Aucune cl√© PGP d√©tect√©e"
fi

echo ""
echo "=== üéØ Audit termin√© ==="
#echo "Bonus √† tester manuellement :"
#echo "  + Autres m√©thodes de st√©ganographie"
#echo "  + Interface graphique"
#echo "  + Comparaison d‚Äôimages"
